# Generated by Django 5.0.4 on 2025-09-29 16:54

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_uses', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_uses_per_customer', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('subscription_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[('company', 'Company'), ('branch', 'Branch'), ('restaurant', 'Restaurant')], max_length=20)),
                ('entity_id', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('trial', 'Trial'), ('active', 'Active'), ('grace_period', 'Grace Period'), ('suspended', 'Suspended'), ('canceled', 'Canceled')], max_length=20)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('current_period_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=False)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('balance', models.IntegerField(default=0)),
                ('plan_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CouponRedemption',
            fields=[
                ('redemption_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('redeemed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('discount_applied', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='subscriptions.coupon')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('feature_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'indexes': [models.Index(fields=['is_active'], name='idx_feature_is_active')],
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='applies_to_feature',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscriptions.feature'),
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('created', 'Created'), ('renewed', 'Renewed'), ('canceled', 'Canceled'), ('plan_changed', 'Plan Changed'), ('status_changed', 'Status Changed'), ('feature_added', 'Feature Added'), ('feature_removed', 'Feature Removed')], max_length=50)),
                ('old_status', models.CharField(blank=True, choices=[('trial', 'Trial'), ('active', 'Active'), ('grace_period', 'Grace Period'), ('suspended', 'Suspended'), ('canceled', 'Canceled')], max_length=20, null=True)),
                ('new_status', models.CharField(blank=True, choices=[('trial', 'Trial'), ('active', 'Active'), ('grace_period', 'Grace Period'), ('suspended', 'Suspended'), ('canceled', 'Canceled')], max_length=20, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('new_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_feature_history', to='subscriptions.feature')),
                ('old_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='old_feature_history', to='subscriptions.feature')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('plan_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('billing_type', models.CharField(choices=[('monthly_fixed', 'Monthly Fixed'), ('pay_per_order', 'Pay Per Order')], max_length=20)),
                ('monthly_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('included_credits', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('grace_credits', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('grace_days', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'indexes': [models.Index(fields=['is_active'], name='idx_plan_is_active')],
            },
        ),
        migrations.AddConstraint(
            model_name='plan',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('billing_type', 'monthly_fixed'), ('included_credits__isnull', True), ('monthly_price__isnull', False)), models.Q(('billing_type', 'pay_per_order'), ('included_credits__isnull', False), ('monthly_price__isnull', True)), _connector='OR'), name='valid_pricing'),
        ),
        migrations.AddField(
            model_name='history',
            name='new_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_plan_history', to='subscriptions.plan'),
        ),
        migrations.AddField(
            model_name='history',
            name='old_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='old_plan_history', to='subscriptions.plan'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='applies_to_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscriptions.plan'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='features',
            field=models.ManyToManyField(related_name='subscriptions', to='subscriptions.feature'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='subscriptions.plan'),
        ),
        migrations.AddField(
            model_name='history',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriptions.subscription'),
        ),
        migrations.AddField(
            model_name='couponredemption',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscriptions.subscription'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['code'], name='idx_coupon_code'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['is_active'], name='idx_coupon_is_active'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['entity_type', 'entity_id'], name='idx_subscription_entity'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['status'], name='idx_subscription_status'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['plan'], name='idx_subscription_plan_id'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['current_period_start', 'current_period_end'], name='idx_subscription_period'),
        ),
        migrations.AddIndex(
            model_name='history',
            index=models.Index(fields=['subscription'], name='idx_history_subscription_id'),
        ),
        migrations.AddIndex(
            model_name='history',
            index=models.Index(fields=['created_at'], name='idx_history_created_at'),
        ),
        migrations.AddIndex(
            model_name='couponredemption',
            index=models.Index(fields=['subscription'], name='idx_coupon_subscription_id'),
        ),
        migrations.AddIndex(
            model_name='couponredemption',
            index=models.Index(fields=['coupon'], name='idx_coupon_coupon_id'),
        ),
    ]

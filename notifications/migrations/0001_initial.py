# Generated by Django 5.0.4 on 2025-08-18 08:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cre', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BroadcastChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_type', models.CharField(choices=[('kitchen', 'Kitchen'), ('service', 'Service'), ('management', 'Management')], max_length=20)),
                ('active_connections', models.PositiveIntegerField(default=0)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cre.branch')),
            ],
        ),
        migrations.CreateModel(
            name='BranchActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('order_create', 'Order Created'), ('order_modify', 'Order Modified'), ('task_claim', 'Task Claimed'), ('task_complete', 'Task Completed'), ('payment_process', 'Payment Processed'), ('staff_available', 'Staff Availability Changed'), ('escalation', 'Task Escalated'), ('field_update', 'Update Field'), ('staff_hire', 'Staff Hired'), ('staff_terminate', 'Staff Terminated'), ('shift_change', 'Shift Schedule Changed'), ('payment_processed', 'Payment Processed'), ('refund_issued', 'Refund Issued'), ('discount_applied', 'Discount Applied'), ('expense_logged', 'Expense Recorded'), ('reservation', 'Reservation Made'), ('complaint', 'Customer Complaint'), ('allergy_alert', 'Allergy Alert Recorded'), ('menu_update', 'Menu Updated'), ('item_add', 'Menu Item Added'), ('item_remove', 'Menu Item Removed'), ('price_change', 'Price Changed')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField()),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cre.branch')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branch_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['-timestamp'], name='notificatio_timesta_190850_idx'), models.Index(fields=['activity_type'], name='notificatio_activit_741809_idx')],
            },
        ),
        migrations.CreateModel(
            name='EmployeeTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_type', models.CharField(choices=[('temporary', 'Temporary'), ('permanent', 'Permanent')], max_length=10, verbose_name='Transfer Type')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('from_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_from', to='cre.branch', verbose_name='From Branch')),
                ('from_restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_out', to='cre.restaurant', verbose_name='From Restaurant')),
                ('initiated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_transfers', to=settings.AUTH_USER_MODEL, verbose_name='Initiated By')),
                ('to_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_to', to='cre.branch', verbose_name='To Branch')),
                ('to_restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_in', to='cre.restaurant', verbose_name='To Restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'status'], name='notificatio_user_id_9e32ca_idx'), models.Index(fields=['to_branch', 'start_date'], name='notificatio_to_bran_657691_idx')],
            },
        ),
        migrations.CreateModel(
            name='RestaurantActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('manager_assign', 'Manager Assigned'), ('manager_remove', 'Manager Removed'), ('staff_hire', 'Staff Hired'), ('staff_terminate', 'Staff Terminated'), ('shift_change', 'Shift Schedule Changed'), ('role_change', 'Staff Role Changed'), ('field_update', 'Update Field'), ('hours_change', 'Operating Hours Changed'), ('closure', 'Restaurant Closed'), ('reopen', 'Restaurant Reopened'), ('maintenance', 'Maintenance Performed'), ('equipment_failure', 'Equipment Failure'), ('health_inspection', 'Health Inspection')], max_length=20, verbose_name='Activity Type')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('details', models.JSONField(default=dict, verbose_name='Details')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cre.restaurant', verbose_name='Restaurant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_activities', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Restaurant Activity Log',
                'verbose_name_plural': 'Restaurant Activity Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp'], name='notificatio_timesta_d30ee1_idx'), models.Index(fields=['activity_type'], name='notificatio_activit_fdaad0_idx'), models.Index(fields=['restaurant', '-timestamp'], name='notificatio_restaur_15bdbf_idx'), models.Index(fields=['user', '-timestamp'], name='notificatio_user_id_e740b5_idx')],
            },
        ),
        migrations.CreateModel(
            name='RoleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_email', models.EmailField(blank=True, max_length=254)),
                ('role', models.CharField(choices=[('company_admin', 'Company Admin'), ('restaurant_owner', 'Restaurant Owner'), ('country_manager', 'Country Manager'), ('restaurant_manager', 'Restaurant Manager'), ('branch_manager', 'Branch Manager'), ('shift_leader', 'Shift Leader'), ('cashier', 'Cashier'), ('cook', 'Cook'), ('food_runner', 'Food Runner'), ('cleaner', 'Cleaner'), ('delivery_man', 'Delivery Man'), ('utility_worker', 'Utility Worker')], max_length=50)),
                ('type', models.CharField(choices=[('invitation', 'Invitation'), ('transfer', 'Ownership Transfer')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('token', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cre.branch')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cre.company')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cre.country')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_assignments', to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cre.restaurant')),
                ('target_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['token'], name='notificatio_token_839e77_idx'), models.Index(fields=['status'], name='notificatio_status_4e14fd_idx')],
            },
        ),
        migrations.CreateModel(
            name='ShiftAssignmentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=100, verbose_name='Shift Action')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cre.branch')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cre.shift')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['branch', 'user', 'date'], name='shift_log_idx')],
                'unique_together': {('branch', 'user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('prepare', 'Prepare Order'), ('serve', 'Serve Order'), ('payment', 'Process Payment')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('claimed', 'Claimed'), ('completed', 'Completed'), ('escalated', 'Escalated')], max_length=20)),
                ('preparation_time', models.DurationField(blank=True, null=True)),
                ('version', models.IntegerField(default=0)),
                ('timeout_at', models.DateTimeField()),
                ('claimed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('claimed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='cre.order')),
            ],
            options={
                'indexes': [models.Index(fields=['status', 'task_type'], name='notificatio_status_697f3c_idx'), models.Index(fields=['claimed_by', 'order_id'], name='notificatio_claimed_e7da78_idx')],
            },
        ),
        migrations.CreateModel(
            name='TransferHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_type', models.CharField(choices=[('temporary', 'Temporary'), ('permanent', 'Permanent')], max_length=10, verbose_name='Transfer Type')),
                ('from_entity', models.CharField(max_length=100, verbose_name='From Entity')),
                ('to_entity', models.CharField(max_length=100, verbose_name='To Entity')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected')], max_length=10, verbose_name='Status')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfer_history', to='cre.branch', verbose_name='Branch')),
                ('initiated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_transfer_history', to=settings.AUTH_USER_MODEL, verbose_name='Initiated By')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfer_history', to='cre.restaurant', verbose_name='Restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_history', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Transfer History',
                'verbose_name_plural': 'Transfer Histories',
                'indexes': [models.Index(fields=['user', 'timestamp'], name='notificatio_user_id_9a78dd_idx'), models.Index(fields=['branch', 'timestamp'], name='notificatio_branch__5bed60_idx'), models.Index(fields=['restaurant', 'timestamp'], name='notificatio_restaur_b13958_idx')],
            },
        ),
    ]

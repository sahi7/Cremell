# Generated by Django 5.0.4 on 2025-03-04 09:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('CRE', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('notifications', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='staffavailability',
            name='current_task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.task'),
        ),
        migrations.AddField(
            model_name='staffshift',
            name='shift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CRE.shift'),
        ),
        migrations.AddField(
            model_name='overtimerequest',
            name='staff_shift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overtime_requests', to='CRE.staffshift'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='branches',
            field=models.ManyToManyField(blank=True, related_name='employees', to='CRE.branch'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='companies',
            field=models.ManyToManyField(blank=True, related_name='users', to='CRE.company'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='countries',
            field=models.ManyToManyField(blank=True, related_name='users', to='CRE.country'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='restaurants',
            field=models.ManyToManyField(blank=True, related_name='employees', to='CRE.restaurant'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='staffshift',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_shifts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='staffavailability',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='manager',
            field=models.ForeignKey(blank=True, help_text='User assigned as the manager of this restaurant', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_restaurant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_driver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='created_by',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='created_company', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='branch',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='branch',
            name='manager',
            field=models.ForeignKey(blank=True, help_text='User assigned as the manager of this branch', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_branch', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='regionorstate',
            unique_together={('name', 'country', 'type')},
        ),
        migrations.AlterUniqueTogether(
            name='city',
            unique_together={('name', 'region_or_state')},
        ),
        migrations.AddIndex(
            model_name='staffshift',
            index=models.Index(fields=['user', 'start_datetime', 'end_datetime'], name='CRE_staffsh_user_id_bbc3b7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='staffshift',
            unique_together={('user', 'shift', 'date')},
        ),
    ]

# Generated by Django 5.0.4 on 2025-08-04 06:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('CRE', '0020_customuser_cre_customu_r_val_422882_idx'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BranchPermissionPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_pools', to='CRE.branch')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pools', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(related_name='permission_pools', to='auth.permission')),
            ],
        ),
        migrations.CreateModel(
            name='BranchPermissionAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, choices=[('company_admin', 'Company Admin'), ('restaurant_owner', 'Restaurant Owner'), ('country_manager', 'Country Manager'), ('restaurant_manager', 'Restaurant Manager'), ('branch_manager', 'Branch Manager'), ('shift_leader', 'Shift Leader'), ('cashier', 'Cashier'), ('cook', 'Cook'), ('food_runner', 'Food Runner'), ('cleaner', 'Cleaner'), ('delivery_man', 'Delivery Man'), ('utility_worker', 'Utility Worker')], max_length=30, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('conditions', models.JSONField(blank=True, default=dict)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_permissions', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_assignments', to='CRE.branch')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='auth.permission')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permission_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'branch', 'permission'], name='permissions_user_id_6b52f0_idx'), models.Index(fields=['role', 'branch', 'permission'], name='permissions_role_313af0_idx'), models.Index(fields=['start_time'], name='permissions_start_t_bea7f2_idx'), models.Index(fields=['end_time'], name='permissions_end_tim_982ee7_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='branchpermissionassignment',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('user', 'branch', 'permission'), name='unique_user_permission_assignment'),
        ),
        migrations.AddConstraint(
            model_name='branchpermissionassignment',
            constraint=models.UniqueConstraint(condition=models.Q(('role__isnull', False)), fields=('role', 'branch', 'permission'), name='unique_role_permission_assignment'),
        ),
        migrations.AddConstraint(
            model_name='branchpermissionassignment',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('role__isnull', True), ('user__isnull', False)), models.Q(('role__isnull', False), ('user__isnull', True)), _connector='OR'), name='user_or_role_exclusive'),
        ),
        migrations.AddConstraint(
            model_name='branchpermissionassignment',
            constraint=models.CheckConstraint(check=models.Q(('end_time__gt', models.F('start_time')), ('end_time__isnull', True), _connector='OR'), name='end_time_after_start_time'),
        ),
        migrations.AddIndex(
            model_name='branchpermissionpool',
            index=models.Index(fields=['branch'], name='permissions_branch__48a074_idx'),
        ),
        migrations.AddConstraint(
            model_name='branchpermissionpool',
            constraint=models.UniqueConstraint(fields=('branch',), name='unique_pool_per_branch'),
        ),
    ]
